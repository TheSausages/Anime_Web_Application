plugins {
    id 'org.springframework.boot' version '3.2.0-M1' apply false
    id 'io.spring.dependency-management' version '1.1.2' apply false
    id "com.diffplug.spotless" version "6.22.0" apply false
}

subprojects { sub ->
    apply plugin: 'java-library'
    apply plugin: 'com.diffplug.spotless'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    group = 'anime.app'

    spotless {
        encoding 'UTF-8'
        enforceCheck true

        // Ratchet is disabled as it disallows spotless to target
        // generated files in git ignored files (ex. openapi generated files)
        // ratchetFrom 'origin/main'

        java {
            googleJavaFormat('1.17.0')

            importOrder()
            removeUnusedImports()
            formatAnnotations()
            toggleOffOn()

            // Versions 3.x.x throw na error, so downgrade is needed
            prettier(['prettier': '2.8.8', 'prettier-plugin-java': '2.2.0'])
                .config(['parser': 'java', 'tabWidth': 4, 'editorconfig': true])
        }

        typescript {
            target "${getLayout().getBuildDirectory().get()}/generated/typescript/**/*.ts"
            endWithNewline()

            toggleOffOn()
            prettier(['prettier': '2.8.8'])
                .config(['editorconfig': true])
        }

        sql {
            toggleOffOn()
            target "**/*.sql"

            // Prettier plugins not working, so dbeaver is used
            dbeaver()
                .configFile("${rootDir}/dbeaver.properties")
        }

        format 'misc', {
            target '*.gradle', '*.md', '.gitignore'

            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }

    // Always check spotless before commit
    tasks.register('installGitHooks', Copy) {
        from new File(rootProject.rootDir, 'scripts/hooks')
        into { new File(rootProject.rootDir, '.git/hooks') }
    }

    build.dependsOn installGitHooks

    // Copy the realm to each service so the integration tests will run
    tasks.register('copyKeycloakRealm', Copy) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        from "${rootDir}${File.separator}docker${File.separator}keycloak${File.separator}realm-export.json"
        into "${projectDir}/src/test/resources/realm"

        mustRunAfter(spotlessSql, spotlessTypescript, spotlessJava)
    }

    processTestResources {
        dependsOn copyKeycloakRealm
    }
}
